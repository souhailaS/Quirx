{
  "timestamp": "2025-07-23T21:37:28.062265",
  "prompt_file": "examples/prompt_sql.txt",
  "input_text": "Show me all users who registered in the last 30 days and have made at least one purchase",
  "model": "gpt-4o-mini",
  "total_mutations": 4,
  "results": [
    {
      "mutation": {
        "original_text": "You are a SQL expert. Generate a valid SQL query for the given request.\n\nRules:\n- Use proper SQL syntax\n- Return only the SQL query without explanations\n- Use appropriate table and column names\n- Ensure the query is syntactically correct\n\nRequest:\n\nShow me all users who registered in the last 30 days and have made at least one purchase",
        "mutated_text": "You are a SQL expert Generate a valid SQL query for the given request\n\nRules\n Use proper SQL syntax\n Return only the SQL query without explanations\n Use appropriate table and column names\n Ensure the query is syntactically correct\n\nRequest\n\nShow me all users who registered in the last 30 days and have made at least one purchase",
        "mutation_type": "lexical",
        "description": "Remove all punctuation",
        "severity": 0.4
      },
      "original_response": {
        "text": "```sql\nSELECT u.user_id, u.username, u.registration_date\nFROM users u\nJOIN purchases p ON u.user_id = p.user_id\nWHERE u.registration_date >= NOW() - INTERVAL 30 DAY\nGROUP BY u.user_id\nHAVING COUNT(p.purchase_id) >= 1;\n```",
        "model": "gpt-4o-mini",
        "tokens_used": 142,
        "response_time": 1.7018229961395264,
        "error": null
      },
      "mutated_response": {
        "text": "```sql\nSELECT u.*\nFROM users u\nJOIN purchases p ON u.user_id = p.user_id\nWHERE u.registration_date >= NOW() - INTERVAL '30 days'\nGROUP BY u.user_id;\n```",
        "model": "gpt-4o-mini",
        "tokens_used": 117,
        "response_time": 2.5796139240264893,
        "error": null
      },
      "comparison": {
        "token_similarity": 0.8,
        "semantic_similarity": 0.65625,
        "structural_similarity": 0.7083333333333334,
        "overall_similarity": 0.7097916666666667,
        "classification": "behavioral_deviation",
        "details": {
          "character_diff": [
            "--- original\n",
            "+++ mutated\n",
            "@@ -1,8 +1,7 @@\n",
            " ```sql\n",
            "-SELECT u.user_id, u.username, u.registration_date\n",
            "+SELECT u.*\n",
            " FROM users u\n",
            " JOIN purchases p ON u.user_id = p.user_id\n",
            "-WHERE u.registration_date >= NOW() - INTERVAL 30 DAY\n",
            "-GROUP BY u.user_id\n",
            "-HAVING COUNT(p.purchase_id) >= 1;\n",
            "+WHERE u.registration_date >= NOW() - INTERVAL '30 days'\n",
            "+GROUP BY u.user_id;\n",
            " ```"
          ],
          "word_diff": {
            "added": [
              "u.*",
              "'30",
              "days'",
              "u.user_id;"
            ],
            "removed": [
              "u.user_id,",
              "u.username,",
              "u.registration_date",
              "30",
              "DAY",
              "u.user_id",
              "HAVING",
              "COUNT(p.purchase_id)",
              ">=",
              "1;"
            ]
          },
          "length_ratio": 0.6877828054298643,
          "is_json_valid": {
            "original_valid": false,
            "mutated_valid": false
          },
          "bleu_score": 0.0
        }
      }
    },
    {
      "mutation": {
        "original_text": "You are a SQL expert. Generate a valid SQL query for the given request.\n\nRules:\n- Use proper SQL syntax\n- Return only the SQL query without explanations\n- Use appropriate table and column names\n- Ensure the query is syntactically correct\n\nRequest:\n\nShow me all users who registered in the last 30 days and have made at least one purchase",
        "mutated_text": "Rules:\n- Use proper SQL syntax\n- Return only the SQL query without explanations\n- Use appropriate table and column names\n- Ensure the query is syntactically correct\n\nRequest:\n\nShow me all users who registered in the last 30 days and have made at least one purchase Generate a valid SQL query for the given request You are a SQL expert",
        "mutation_type": "structural",
        "description": "Randomly reorder sentences",
        "severity": 0.6
      },
      "original_response": {
        "text": "```sql\nSELECT u.user_id, u.username, u.registration_date\nFROM users u\nJOIN purchases p ON u.user_id = p.user_id\nWHERE u.registration_date >= NOW() - INTERVAL 30 DAY\nGROUP BY u.user_id\nHAVING COUNT(p.purchase_id) >= 1;\n```",
        "model": "gpt-4o-mini",
        "tokens_used": 142,
        "response_time": 1.7018229961395264,
        "error": null
      },
      "mutated_response": {
        "text": "```sql\nSELECT DISTINCT u.user_id, u.username, u.registration_date\nFROM users u\nJOIN purchases p ON u.user_id = p.user_id\nWHERE u.registration_date >= NOW() - INTERVAL 30 DAY;\n```",
        "model": "gpt-4o-mini",
        "tokens_used": 124,
        "response_time": 1.5786921977996826,
        "error": null
      },
      "comparison": {
        "token_similarity": 0.8387096774193549,
        "semantic_similarity": 0.7333333333333333,
        "structural_similarity": 0.8888888888888888,
        "overall_similarity": 0.7960573476702508,
        "classification": "minor_variation",
        "details": {
          "character_diff": [
            "--- original\n",
            "+++ mutated\n",
            "@@ -1,8 +1,6 @@\n",
            " ```sql\n",
            "-SELECT u.user_id, u.username, u.registration_date\n",
            "+SELECT DISTINCT u.user_id, u.username, u.registration_date\n",
            " FROM users u\n",
            " JOIN purchases p ON u.user_id = p.user_id\n",
            "-WHERE u.registration_date >= NOW() - INTERVAL 30 DAY\n",
            "-GROUP BY u.user_id\n",
            "-HAVING COUNT(p.purchase_id) >= 1;\n",
            "+WHERE u.registration_date >= NOW() - INTERVAL 30 DAY;\n",
            " ```"
          ],
          "word_diff": {
            "added": [
              "DISTINCT",
              "DAY;"
            ],
            "removed": [
              "DAY",
              "GROUP",
              "BY",
              "u.user_id",
              "HAVING",
              "COUNT(p.purchase_id)",
              ">=",
              "1;"
            ]
          },
          "length_ratio": 0.8054298642533937,
          "is_json_valid": {
            "original_valid": false,
            "mutated_valid": false
          },
          "bleu_score": 0.0
        }
      }
    },
    {
      "mutation": {
        "original_text": "You are a SQL expert. Generate a valid SQL query for the given request.\n\nRules:\n- Use proper SQL syntax\n- Return only the SQL query without explanations\n- Use appropriate table and column names\n- Ensure the query is syntactically correct\n\nRequest:\n\nShow me all users who registered in the last 30 days and have made at least one purchase",
        "mutated_text": "Generate a valid SQL query for the given request Rules:\n- Use proper SQL syntax\n- Return only the SQL query without explanations\n- Use appropriate table and column names\n- Ensure the query is syntactically correct\n\nRequest:\n\nShow me all users who registered in the last 30 days and have made at least one purchase You are a SQL expert",
        "mutation_type": "structural",
        "description": "Randomly reorder sentences",
        "severity": 0.6
      },
      "original_response": {
        "text": "```sql\nSELECT u.user_id, u.username, u.registration_date\nFROM users u\nJOIN purchases p ON u.user_id = p.user_id\nWHERE u.registration_date >= NOW() - INTERVAL 30 DAY\nGROUP BY u.user_id\nHAVING COUNT(p.purchase_id) >= 1;\n```",
        "model": "gpt-4o-mini",
        "tokens_used": 142,
        "response_time": 1.7018229961395264,
        "error": null
      },
      "mutated_response": {
        "text": "```sql\nSELECT u.user_id, u.username, u.registration_date\nFROM users u\nJOIN purchases p ON u.user_id = p.user_id\nWHERE u.registration_date >= NOW() - INTERVAL 30 DAY\nGROUP BY u.user_id\nHAVING COUNT(p.purchase_id) > 0;\n```",
        "model": "gpt-4o-mini",
        "tokens_used": 140,
        "response_time": 1.9786829948425293,
        "error": null
      },
      "comparison": {
        "token_similarity": 0.9714285714285714,
        "semantic_similarity": 0.9,
        "structural_similarity": 1.0,
        "overall_similarity": 0.9414285714285715,
        "classification": "minor_variation",
        "details": {
          "character_diff": [
            "--- original\n",
            "+++ mutated\n",
            "@@ -4,5 +4,5 @@\n",
            " JOIN purchases p ON u.user_id = p.user_id\n",
            " WHERE u.registration_date >= NOW() - INTERVAL 30 DAY\n",
            " GROUP BY u.user_id\n",
            "-HAVING COUNT(p.purchase_id) >= 1;\n",
            "+HAVING COUNT(p.purchase_id) > 0;\n",
            " ```"
          ],
          "word_diff": {
            "added": [
              ">",
              "0;"
            ],
            "removed": [
              ">=",
              "1;"
            ]
          },
          "length_ratio": 0.995475113122172,
          "is_json_valid": {
            "original_valid": false,
            "mutated_valid": false
          },
          "bleu_score": 0.0
        }
      }
    },
    {
      "mutation": {
        "original_text": "You are a SQL expert. Generate a valid SQL query for the given request.\n\nRules:\n- Use proper SQL syntax\n- Return only the SQL query without explanations\n- Use appropriate table and column names\n- Ensure the query is syntactically correct\n\nRequest:\n\nShow me all users who registered in the last 30 days and have made at least one purchase",
        "mutated_text": "Generate a valid SQL query for the given request You are a SQL expert Rules:\n- Use proper SQL syntax\n- Return only the SQL query without explanations\n- Use appropriate table and column names\n- Ensure the query is syntactically correct\n\nRequest:\n\nShow me all users who registered in the last 30 days and have made at least one purchase",
        "mutation_type": "structural",
        "description": "Randomly reorder sentences",
        "severity": 0.6
      },
      "original_response": {
        "text": "```sql\nSELECT u.user_id, u.username, u.registration_date\nFROM users u\nJOIN purchases p ON u.user_id = p.user_id\nWHERE u.registration_date >= NOW() - INTERVAL 30 DAY\nGROUP BY u.user_id\nHAVING COUNT(p.purchase_id) >= 1;\n```",
        "model": "gpt-4o-mini",
        "tokens_used": 142,
        "response_time": 1.7018229961395264,
        "error": null
      },
      "mutated_response": {
        "text": "```sql\nSELECT u.user_id, u.username, u.registration_date\nFROM users u\nJOIN purchases p ON u.user_id = p.user_id\nWHERE u.registration_date >= NOW() - INTERVAL 30 DAY\nGROUP BY u.user_id\nHAVING COUNT(p.purchase_id) >= 1;\n```",
        "model": "gpt-4o-mini",
        "tokens_used": 140,
        "response_time": 1.8195719718933105,
        "error": null
      },
      "comparison": {
        "token_similarity": 1.0,
        "semantic_similarity": 1.0,
        "structural_similarity": 1.0,
        "overall_similarity": 1.0,
        "classification": "equivalent",
        "details": {
          "character_diff": [],
          "word_diff": {
            "added": [],
            "removed": []
          },
          "length_ratio": 1.0,
          "is_json_valid": {
            "original_valid": false,
            "mutated_valid": false
          },
          "bleu_score": 0.0
        }
      }
    }
  ],
  "summary": {
    "robustness_score": 0.6,
    "equivalent_count": 1,
    "minor_variation_count": 2,
    "behavioral_deviation_count": 1,
    "equivalent_percentage": 25.0,
    "minor_variation_percentage": 50.0,
    "behavioral_deviation_percentage": 25.0,
    "avg_response_time": 1.8454816341400146,
    "failed_mutations": 0,
    "total_mutations": 4
  }
}